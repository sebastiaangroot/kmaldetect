long hook_sys_time(time_t __user *tloc)
long hook_sys_stime(time_t __user *tptr)
long hook_sys_gettimeofday(struct timeval __user *tv, struct timezone __user *tz)
long hook_sys_settimeofday(struct timeval __user *tv, struct timezone __user *tz)
long hook_sys_adjtimex(struct timex __user *txc_p)
long hook_sys_times(struct tms __user *tbuf)
long hook_sys_gettid(void)
long hook_sys_nanosleep(struct timespec __user *rqtp, struct timespec __user *rmtp)
long hook_sys_alarm(unsigned int seconds)
long hook_sys_getpid(void)
long hook_sys_getppid(void)
long hook_sys_getuid(void)
long hook_sys_geteuid(void)
long hook_sys_getgid(void)
long hook_sys_getegid(void)
long hook_sys_getresuid(uid_t __user *ruid, uid_t __user *euid, uid_t __user *suid)
long hook_sys_getresgid(gid_t __user *rgid, gid_t __user *egid, gid_t __user *sgid)
long hook_sys_getpgid(pid_t pid)
long hook_sys_getpgrp(void)
long hook_sys_getsid(pid_t pid)
long hook_sys_getgroups(int gidsetsize, gid_t __user *grouplist)
long hook_sys_setregid(gid_t rgid, gid_t egid)
long hook_sys_setgid(gid_t gid)
long hook_sys_setreuid(uid_t ruid, uid_t euid)
long hook_sys_setuid(uid_t uid)
long hook_sys_setresuid(uid_t ruid, uid_t euid, uid_t suid)
long hook_sys_setresgid(gid_t rgid, gid_t egid, gid_t sgid)
long hook_sys_setfsuid(uid_t uid)
long hook_sys_setfsgid(gid_t gid)
long hook_sys_setpgid(pid_t pid, pid_t pgid)
long hook_sys_setsid(void)
long hook_sys_setgroups(int gidsetsize, gid_t __user *grouplist)
long hook_sys_acct(const char __user *name)
long hook_sys_capget(cap_user_header_t header, cap_user_data_t dataptr)
long hook_sys_capset(cap_user_header_t header, const cap_user_data_t data)
long hook_sys_personality(u_long personality)
long hook_sys_sigpending(old_sigset_t __user *set)
long hook_sys_sigprocmask(int how, old_sigset_t __user *set, old_sigset_t __user *oset)
long hook_sys_getitimer(int which, struct itimerval __user *value)
long hook_sys_setitimer(int which, struct itimerval __user *value, struct itimerval __user *ovalue)
long hook_sys_timer_create(clockid_t which_clock, struct sigevent __user *timer_event_spec, timer_t __user * created_timer_id)
long hook_sys_timer_gettime(timer_t timer_id, struct itimerspec __user *setting)
long hook_sys_timer_getoverrun(timer_t timer_id)
long hook_sys_timer_settime(timer_t timer_id, int flags, const struct itimerspec __user *new_setting, struct itimerspec __user *old_setting)
long hook_sys_timer_delete(timer_t timer_id)
long hook_sys_clock_settime(clockid_t which_clock, const struct timespec __user *tp)
long hook_sys_clock_gettime(clockid_t which_clock, struct timespec __user *tp)
long hook_sys_clock_getres(clockid_t which_clock, struct timespec __user *tp)
long hook_sys_clock_nanosleep(clockid_t which_clock, int flags, const struct timespec __user *rqtp, struct timespec __user *rmtp)
long hook_sys_nice(int increment)
long hook_sys_sched_setscheduler(pid_t pid, int policy, struct sched_param __user *param)
long hook_sys_sched_setparam(pid_t pid, struct sched_param __user *param)
long hook_sys_sched_getscheduler(pid_t pid)
long hook_sys_sched_getparam(pid_t pid, struct sched_param __user *param)
long hook_sys_sched_setaffinity(pid_t pid, unsigned int len, unsigned long __user *user_mask_ptr)
long hook_sys_sched_getaffinity(pid_t pid, unsigned int len, unsigned long __user *user_mask_ptr)
long hook_sys_sched_yield(void)
long hook_sys_sched_get_priority_max(int policy)
long hook_sys_sched_get_priority_min(int policy)
long hook_sys_sched_rr_get_interval(pid_t pid, struct timespec __user *interval)
long hook_sys_setpriority(int which, int who, int niceval)
long hook_sys_getpriority(int which, int who)
long hook_sys_shutdown(int, int)
long hook_sys_reboot(int magic1, int magic2, unsigned int cmd, void __user *arg)
long hook_sys_restart_syscall(void)
long hook_sys_kexec_load(unsigned long entry, unsigned long nr_segments, struct kexec_segment __user *segments, unsigned long flags)
long hook_sys_exit(int error_code)
long hook_sys_exit_group(int error_code)
long hook_sys_wait4(pid_t pid, int __user *stat_addr, int options, struct rusage __user *ru)
long hook_sys_waitid(int which, pid_t pid, struct siginfo __user *infop, int options, struct rusage __user *ru)
long hook_sys_waitpid(pid_t pid, int __user *stat_addr, int options)
long hook_sys_set_tid_address(int __user *tidptr)
long hook_sys_futex(u32 __user *uaddr, int op, u32 val, struct timespec __user *utime, u32 __user *uaddr2, u32 val3)
long hook_sys_init_module(void __user *umod, unsigned long len, const char __user *uargs)
long hook_sys_delete_module(const char __user *name_user, unsigned int flags)
long hook_sys_rt_sigprocmask(int how, sigset_t __user *set, sigset_t __user *oset, size_t sigsetsize)
long hook_sys_rt_sigpending(sigset_t __user *set, size_t sigsetsize)
long hook_sys_rt_sigtimedwait(const sigset_t __user *uthese, siginfo_t __user *uinfo, const struct timespec __user *uts, size_t sigsetsize)
long hook_sys_rt_tgsigqueueinfo(pid_t tgid, pid_t  pid, int sig, siginfo_t __user *uinfo)
long hook_sys_kill(int pid, int sig)
long hook_sys_tgkill(int tgid, int pid, int sig)
long hook_sys_tkill(int pid, int sig)
long hook_sys_rt_sigqueueinfo(int pid, int sig, siginfo_t __user *uinfo)
long hook_sys_sgetmask(void)
long hook_sys_ssetmask(int newmask)
long hook_sys_signal(int sig, __sighandler_t handler)
long hook_sys_pause(void)
long hook_sys_sync(void)
long hook_sys_fsync(unsigned int fd)
long hook_sys_fdatasync(unsigned int fd)
long hook_sys_bdflush(int func, long data)
long hook_sys_mount(char __user *dev_name, char __user *dir_name, char __user *type, unsigned long flags, void __user *data)
long hook_sys_umount(char __user *name, int flags)
long hook_sys_oldumount(char __user *name)
long hook_sys_truncate(const char __user *path, long length)
long hook_sys_ftruncate(unsigned int fd, unsigned long length)
long hook_sys_stat(char __user *filename, struct __old_kernel_stat __user *statbuf)
long hook_sys_statfs(const char __user * path, struct statfs __user *buf)
long hook_sys_statfs64(const char __user *path, size_t sz, struct statfs64 __user *buf)
long hook_sys_fstatfs(unsigned int fd, struct statfs __user *buf)
long hook_sys_fstatfs64(unsigned int fd, size_t sz, struct statfs64 __user *buf)
long hook_sys_lstat(char __user *filename, struct __old_kernel_stat __user *statbuf)
long hook_sys_fstat(unsigned int fd, struct __old_kernel_stat __user *statbuf)
long hook_sys_newstat(char __user *filename, struct stat __user *statbuf)
long hook_sys_newlstat(char __user *filename, struct stat __user *statbuf)
long hook_sys_newfstat(unsigned int fd, struct stat __user *statbuf)
long hook_sys_ustat(unsigned dev, struct ustat __user *ubuf)

#if BITS_PER_LONG == 32
long hook_sys_stat64(char __user *filename, struct stat64 __user *statbuf)
long hook_sys_fstat64(unsigned long fd, struct stat64 __user *statbuf)
long hook_sys_lstat64(char __user *filename, struct stat64 __user *statbuf)
long hook_sys_truncate64(const char __user *path, loff_t length)
long hook_sys_ftruncate64(unsigned int fd, loff_t length)
#endif

long hook_sys_setxattr(const char __user *path, const char __user *name, const void __user *value, size_t size, int flags)
long hook_sys_lsetxattr(const char __user *path, const char __user *name, const void __user *value, size_t size, int flags)
long hook_sys_fsetxattr(int fd, const char __user *name, const void __user *value, size_t size, int flags)
long hook_sys_getxattr(const char __user *path, const char __user *name, void __user *value, size_t size)
long hook_sys_lgetxattr(const char __user *path, const char __user *name, void __user *value, size_t size)
long hook_sys_fgetxattr(int fd, const char __user *name, void __user *value, size_t size)
long hook_sys_listxattr(const char __user *path, char __user *list, size_t size)
long hook_sys_llistxattr(const char __user *path, char __user *list, size_t size)
long hook_sys_flistxattr(int fd, char __user *list, size_t size)
long hook_sys_removexattr(const char __user *path, const char __user *name)
long hook_sys_lremovexattr(const char __user *path, const char __user *name)
long hook_sys_fremovexattr(int fd, const char __user *name)
long hook_sys_brk(unsigned long brk)
long hook_sys_mprotect(unsigned long start, size_t len, unsigned long prot)
long hook_sys_mremap(unsigned long addr, unsigned long old_len, unsigned long new_len, unsigned long flags, unsigned long new_addr)
long hook_sys_remap_file_pages(unsigned long start, unsigned long size, unsigned long prot, unsigned long pgoff, unsigned long flags)
long hook_sys_msync(unsigned long start, size_t len, int flags)
long hook_sys_fadvise64(int fd, loff_t offset, size_t len, int advice)
long hook_sys_fadvise64_64(int fd, loff_t offset, loff_t len, int advice)
long hook_sys_munmap(unsigned long addr, size_t len)
long hook_sys_mlock(unsigned long start, size_t len)
long hook_sys_munlock(unsigned long start, size_t len)
long hook_sys_mlockall(int flags)
long hook_sys_munlockall(void)
long hook_sys_madvise(unsigned long start, size_t len, int behavior)
long hook_sys_mincore(unsigned long start, size_t len, unsigned char __user * vec)
long hook_sys_pivot_root(const char __user *new_root, const char __user *put_old)
long hook_sys_chroot(const char __user *filename)
long hook_sys_mknod(const char __user *filename, int mode, unsigned dev)
long hook_sys_link(const char __user *oldname, const char __user *newname)
long hook_sys_symlink(const char __user *old, const char __user *new)
long hook_sys_unlink(const char __user *pathname)
long hook_sys_rename(const char __user *oldname, const char __user *newname)
long hook_sys_chmod(const char __user *filename, mode_t mode)
long hook_sys_fchmod(unsigned int fd, mode_t mode)
long hook_sys_fcntl(unsigned int fd, unsigned int cmd, unsigned long arg)

#if BITS_PER_LONG == 32
long hook_sys_fcntl64(unsigned int fd, unsigned int cmd, unsigned long arg)
#endif

long hook_sys_pipe(int __user *fildes)
long hook_sys_pipe2(int __user *fildes, int flags)
long hook_sys_dup(unsigned int fildes)
long hook_sys_dup2(unsigned int oldfd, unsigned int newfd)
long hook_sys_dup3(unsigned int oldfd, unsigned int newfd, int flags)
long hook_sys_ioperm(unsigned long from, unsigned long num, int on)
long hook_sys_ioctl(unsigned int fd, unsigned int cmd, unsigned long arg)
long hook_sys_flock(unsigned int fd, unsigned int cmd)
long hook_sys_io_setup(unsigned nr_reqs, aio_context_t __user *ctx)
long hook_sys_io_destroy(aio_context_t ctx)
long hook_sys_io_getevents(aio_context_t ctx_id, long min_nr, long nr, struct io_event __user *events, struct timespec __user *timeout)
long hook_sys_io_submit(aio_context_t, long, struct iocb __user * __user *)
long hook_sys_io_cancel(aio_context_t ctx_id, struct iocb __user *iocb, struct io_event __user *result)
long hook_sys_sendfile(int out_fd, int in_fd, off_t __user *offset, size_t count)
long hook_sys_sendfile64(int out_fd, int in_fd, loff_t __user *offset, size_t count)
long hook_sys_readlink(const char __user *path, char __user *buf, int bufsiz)
long hook_sys_creat(const char __user *pathname, int mode)
long hook_sys_open(const char __user *filename, int flags, int mode)
long hook_sys_close(unsigned int fd)
long hook_sys_access(const char __user *filename, int mode)
long hook_sys_vhangup(void)
long hook_sys_chown(const char __user *filename, uid_t user, gid_t group)
long hook_sys_lchown(const char __user *filename, uid_t user, gid_t group)
long hook_sys_fchown(unsigned int fd, uid_t user, gid_t group)

#ifdef CONFIG_UID16
long hook_sys_chown16(const char __user *filename, old_uid_t user, old_gid_t group)
long hook_sys_lchown16(const char __user *filename, old_uid_t user, old_gid_t group)
long hook_sys_fchown16(unsigned int fd, old_uid_t user, old_gid_t group)
long hook_sys_setregid16(old_gid_t rgid, old_gid_t egid)
long hook_sys_setgid16(old_gid_t gid)
long hook_sys_setreuid16(old_uid_t ruid, old_uid_t euid)
long hook_sys_setuid16(old_uid_t uid)
long hook_sys_setresuid16(old_uid_t ruid, old_uid_t euid, old_uid_t suid)
long hook_sys_getresuid16(old_uid_t __user *ruid, old_uid_t __user *euid, old_uid_t __user *suid)
long hook_sys_setresgid16(old_gid_t rgid, old_gid_t egid, old_gid_t sgid)
long hook_sys_getresgid16(old_gid_t __user *rgid, old_gid_t __user *egid, old_gid_t __user *sgid)
long hook_sys_setfsuid16(old_uid_t uid)
long hook_sys_setfsgid16(old_gid_t gid)
long hook_sys_getgroups16(int gidsetsize, old_gid_t __user *grouplist)
long hook_sys_setgroups16(int gidsetsize, old_gid_t __user *grouplist)
long hook_sys_getuid16(void)
long hook_sys_geteuid16(void)
long hook_sys_getgid16(void)
long hook_sys_getegid16(void)
#endif

long hook_sys_utime(char __user *filename, struct utimbuf __user *times)
long hook_sys_utimes(char __user *filename, struct timeval __user *utimes)
long hook_sys_lseek(unsigned int fd, off_t offset, unsigned int origin)
long hook_sys_llseek(unsigned int fd, unsigned long offset_high, unsigned long offset_low, loff_t __user *result, unsigned int origin)
long hook_sys_read(unsigned int fd, char __user *buf, size_t count)
long hook_sys_readahead(int fd, loff_t offset, size_t count)
long hook_sys_readv(unsigned long fd, const struct iovec __user *vec, unsigned long vlen)
long hook_sys_write(unsigned int fd, const char __user *buf, size_t count)
long hook_sys_writev(unsigned long fd, const struct iovec __user *vec, unsigned long vlen)
long hook_sys_pread64(unsigned int fd, char __user *buf, size_t count, loff_t pos)
long hook_sys_pwrite64(unsigned int fd, const char __user *buf, size_t count, loff_t pos)
long hook_sys_preadv(unsigned long fd, const struct iovec __user *vec, unsigned long vlen, unsigned long pos_l, unsigned long pos_h)
long hook_sys_pwritev(unsigned long fd, const struct iovec __user *vec, unsigned long vlen, unsigned long pos_l, unsigned long pos_h)
long hook_sys_getcwd(char __user *buf, unsigned long size)
long hook_sys_mkdir(const char __user *pathname, int mode)
long hook_sys_chdir(const char __user *filename)
long hook_sys_fchdir(unsigned int fd)
long hook_sys_rmdir(const char __user *pathname)
long hook_sys_lookup_dcookie(u64 cookie64, char __user *buf, size_t len)
long hook_sys_quotactl(unsigned int cmd, const char __user *special, qid_t id, void __user *addr)
long hook_sys_getdents(unsigned int fd, struct linux_dirent __user *dirent, unsigned int count)
long hook_sys_getdents64(unsigned int fd, struct linux_dirent64 __user *dirent, unsigned int count)
long hook_sys_setsockopt(int fd, int level, int optname, char __user *optval, int optlen)
long hook_sys_getsockopt(int fd, int level, int optname, char __user *optval, int __user *optlen)
long hook_sys_bind(int, struct sockaddr __user *, int)
long hook_sys_connect(int, struct sockaddr __user *, int)
long hook_sys_accept(int, struct sockaddr __user *, int __user *)
long hook_sys_accept4(int, struct sockaddr __user *, int __user *, int)
long hook_sys_getsockname(int, struct sockaddr __user *, int __user *)
long hook_sys_getpeername(int, struct sockaddr __user *, int __user *)
long hook_sys_send(int, void __user *, size_t, unsigned)
long hook_sys_sendto(int, void __user *, size_t, unsigned, struct sockaddr __user *, int)
long hook_sys_sendmsg(int fd, struct msghdr __user *msg, unsigned flags)
long hook_sys_recv(int, void __user *, size_t, unsigned)
long hook_sys_recvfrom(int, void __user *, size_t, unsigned, struct sockaddr __user *, int __user *)
long hook_sys_recvmsg(int fd, struct msghdr __user *msg, unsigned flags)
long hook_sys_socket(int, int, int)
long hook_sys_socketpair(int, int, int, int __user *)
long hook_sys_socketcall(int call, unsigned long __user *args)
long hook_sys_listen(int, int)
long hook_sys_poll(struct pollfd __user *ufds, unsigned int nfds, long timeout)
long hook_sys_select(int n, fd_set __user *inp, fd_set __user *outp, fd_set __user *exp, struct timeval __user *tvp)
long hook_sys_epoll_create(int size)
long hook_sys_epoll_create1(int flags)
long hook_sys_epoll_ctl(int epfd, int op, int fd, struct epoll_event __user *event)
long hook_sys_epoll_wait(int epfd, struct epoll_event __user *events, int maxevents, int timeout)
long hook_sys_epoll_pwait(int epfd, struct epoll_event __user *events, int maxevents, int timeout, const sigset_t __user *sigmask, size_t sigsetsize)
long hook_sys_gethostname(char __user *name, int len)
long hook_sys_sethostname(char __user *name, int len)
long hook_sys_setdomainname(char __user *name, int len)
long hook_sys_newuname(struct new_utsname __user *name)
long hook_sys_getrlimit(unsigned int resource, struct rlimit __user *rlim)

#if defined(COMPAT_RLIM_OLD_INFINITY) || !(defined(CONFIG_IA64))
long hook_sys_old_getrlimit(unsigned int resource, struct rlimit __user *rlim)
#endif

long hook_sys_setrlimit(unsigned int resource, struct rlimit __user *rlim)
long hook_sys_getrusage(int who, struct rusage __user *ru)
long hook_sys_umask(int mask)
long hook_sys_msgget(key_t key, int msgflg)
long hook_sys_msgsnd(int msqid, struct msgbuf __user *msgp, size_t msgsz, int msgflg)
long hook_sys_msgrcv(int msqid, struct msgbuf __user *msgp, size_t msgsz, long msgtyp, int msgflg)
long hook_sys_msgctl(int msqid, int cmd, struct msqid_ds __user *buf)
long hook_sys_semget(key_t key, int nsems, int semflg)
long hook_sys_semop(int semid, struct sembuf __user *sops, unsigned nsops)
long hook_sys_semctl(int semid, int semnum, int cmd, union semun arg)
long hook_sys_semtimedop(int semid, struct sembuf __user *sops, unsigned nsops, const struct timespec __user *timeout)
long hook_sys_shmat(int shmid, char __user *shmaddr, int shmflg)
long hook_sys_shmget(key_t key, size_t size, int flag)
long hook_sys_shmdt(char __user *shmaddr)
long hook_sys_shmctl(int shmid, int cmd, struct shmid_ds __user *buf)
long hook_sys_mq_open(const char __user *name, int oflag, mode_t mode, struct mq_attr __user *attr)
long hook_sys_mq_unlink(const char __user *name)
long hook_sys_mq_timedsend(mqd_t mqdes, const char __user *msg_ptr, size_t msg_len, unsigned int msg_prio, const struct timespec __user *abs_timeout)
long hook_sys_mq_timedreceive(mqd_t mqdes, char __user *msg_ptr, size_t msg_len, unsigned int __user *msg_prio, const struct timespec __user *abs_timeout)
long hook_sys_mq_notify(mqd_t mqdes, const struct sigevent __user *notification)
long hook_sys_mq_getsetattr(mqd_t mqdes, const struct mq_attr __user *mqstat, struct mq_attr __user *omqstat)
long hook_sys_pciconfig_iobase(long which, unsigned long bus, unsigned long devfn)
long hook_sys_pciconfig_read(unsigned long bus, unsigned long dfn, unsigned long off, unsigned long len, void __user *buf)
long hook_sys_pciconfig_write(unsigned long bus, unsigned long dfn, unsigned long off, unsigned long len, void __user *buf)
long hook_sys_prctl(int option, unsigned long arg2, unsigned long arg3, unsigned long arg4, unsigned long arg5)
long hook_sys_swapon(const char __user *specialfile, int swap_flags)
long hook_sys_swapoff(const char __user *specialfile)
long hook_sys_sysctl(struct __sysctl_args __user *args)
long hook_sys_sysinfo(struct sysinfo __user *info)
long hook_sys_sysfs(int option, unsigned long arg1, unsigned long arg2)
long hook_sys_nfsservctl(int cmd, struct nfsctl_arg __user *arg, void __user *res)
long hook_sys_syslog(int type, char __user *buf, int len)
long hook_sys_uselib(const char __user *library)
long hook_sys_ni_syscall(void)
long hook_sys_ptrace(long request, long pid, long addr, long data)
long hook_sys_add_key(const char __user *_type, const char __user *_description, const void __user *_payload, size_t plen, key_serial_t destringid)
long hook_sys_request_key(const char __user *_type, const char __user *_description, const char __user *_callout_info, key_serial_t destringid)
long hook_sys_keyctl(int cmd, unsigned long arg2, unsigned long arg3, unsigned long arg4, unsigned long arg5)
long hook_sys_ioprio_set(int which, int who, int ioprio)
long hook_sys_ioprio_get(int which, int who)
long hook_sys_set_mempolicy(int mode, unsigned long __user *nmask, unsigned long maxnode)
long hook_sys_migrate_pages(pid_t pid, unsigned long maxnode, const unsigned long __user *from, const unsigned long __user *to)
long hook_sys_move_pages(pid_t pid, unsigned long nr_pages,	const void __user * __user *pages, const int __user *nodes, int __user *status,	int flags)
long hook_sys_mbind(unsigned long start, unsigned long len,	unsigned long mode,	unsigned long __user *nmask, unsigned long maxnode,	unsigned flags)
long hook_sys_get_mempolicy(int __user *policy, unsigned long __user *nmask, unsigned long maxnode, unsigned long addr, unsigned long flags)
long hook_sys_inotify_init(void)
long hook_sys_inotify_init1(int flags)
long hook_sys_inotify_add_watch(int fd, const char __user *path, u32 mask)
long hook_sys_inotify_rm_watch(int fd, __s32 wd)
long hook_sys_spu_run(int fd, __u32 __user *unpc, __u32 __user *ustatus)
long hook_sys_spu_create(const char __user *name, unsigned int flags, mode_t mode, int fd)
long hook_sys_mknodat(int dfd, const char __user * filename, int mode, unsigned dev)
long hook_sys_mkdirat(int dfd, const char __user * pathname, int mode)
long hook_sys_unlinkat(int dfd, const char __user * pathname, int flag)
long hook_sys_symlinkat(const char __user * oldname, int newdfd, const char __user * newname)
long hook_sys_linkat(int olddfd, const char __user *oldname, int newdfd, const char __user *newname, int flags)
long hook_sys_renameat(int olddfd, const char __user * oldname, int newdfd, const char __user * newname)
long hook_sys_futimesat(int dfd, char __user *filename, struct timeval __user *utimes)
long hook_sys_faccessat(int dfd, const char __user *filename, int mode)
long hook_sys_fchmodat(int dfd, const char __user * filename, mode_t mode)
long hook_sys_fchownat(int dfd, const char __user *filename, uid_t user, gid_t group, int flag)
long hook_sys_openat(int dfd, const char __user *filename, int flags, int mode)
long hook_sys_newfstatat(int dfd, char __user *filename, struct stat __user *statbuf, int flag)
long hook_sys_fstatat64(int dfd, char __user *filename, struct stat64 __user *statbuf, int flag)
long hook_sys_readlinkat(int dfd, const char __user *path, char __user *buf, int bufsiz)
long hook_sys_utimensat(int dfd, char __user *filename,	struct timespec __user *utimes, int flags)
long hook_sys_unshare(unsigned long unshare_flags)
long hook_sys_splice(int fd_in, loff_t __user *off_in, int fd_out, loff_t __user *off_out, size_t len, unsigned int flags)
long hook_sys_vmsplice(int fd, const struct iovec __user *iov, unsigned long nr_segs, unsigned int flags)
long hook_sys_tee(int fdin, int fdout, size_t len, unsigned int flags)
long hook_sys_sync_file_range(int fd, loff_t offset, loff_t nbytes,	unsigned int flags)
long hook_sys_sync_file_range2(int fd, unsigned int flags, loff_t offset, loff_t nbytes)
long hook_sys_get_robust_list(int pid, struct robust_list_head __user * __user *head_ptr, size_t __user *len_ptr)
long hook_sys_set_robust_list(struct robust_list_head __user *head, size_t len)
long hook_sys_getcpu(unsigned __user *cpu, unsigned __user *node, struct getcpu_cache __user *cache)
long hook_sys_signalfd(int ufd, sigset_t __user *user_mask, size_t sizemask)
long hook_sys_signalfd4(int ufd, sigset_t __user *user_mask, size_t sizemask, int flags)
long hook_sys_timerfd_create(int clockid, int flags)
long hook_sys_timerfd_settime(int ufd, int flags, const struct itimerspec __user *utmr, struct itimerspec __user *otmr)
long hook_sys_timerfd_gettime(int ufd, struct itimerspec __user *otmr)
long hook_sys_eventfd(unsigned int count)
long hook_sys_eventfd2(unsigned int count, int flags)
long hook_sys_fallocate(int fd, int mode, loff_t offset, loff_t len)
long hook_sys_old_readdir(unsigned int, struct old_linux_dirent __user *, unsigned int)
long hook_sys_pselect6(int, fd_set __user *, fd_set __user *, fd_set __user *, struct timespec __user *, void __user *)
long hook_sys_ppoll(struct pollfd __user *, unsigned int, struct timespec __user *, const sigset_t __user *, size_t)
int hook_kernel_execve(const char *filename, char *const argv[], char *const envp[])
long hook_sys_perf_event_open(struct perf_event_attr __user *attr_uptr,	pid_t pid, int cpu, int group_fd, unsigned long flags)
long hook_sys_mmap_pgoff(unsigned long addr, unsigned long len, unsigned long prot, unsigned long flags, unsigned long fd, unsigned long pgoff)